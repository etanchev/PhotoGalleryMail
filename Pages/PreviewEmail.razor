@page "/preview-email/{MailId:int}"
@inject IHttpClientFactory ClientFactory
@inject NavigationManager NavigationManager
@inject ApiCalls ApiCalls


<AuthorizeView Roles="admin">
    <Authorized>
        @if (SendGridDbModel == null)
        {
            <BSpinner @ref="Spiner" IsVisible="true"></BSpinner>
        }
        else
        {
            <div class="d-flex flex-column border" style="border-color:rgba(206,164,52,1)">
                <div class="d-flex flex-row w-100 p-2 justify-content-start my-deepblue-color-background">
                    <span class="oi oi-arrow-left p-1 my-yellow-color-background my-deepblue-color-text rounded" style="cursor:pointer" @onclick="(e => Return())"></span>
                    @*<span class="oi oi-trash p-1 ml-2 my-yellow-color-background my-deepblue-color-text rounded" @onclick="(e => ApiCalls.DeleteEmail(MailId))"></span>*@
                </div>
                <div class="d-flex flex-row w-100 p-2 justify-content-start">
                    <div class="flex-column w-100">
                        <div class="d-flex flex-sm-row flex-column w-100">
                            <div class="d-flex flex-row  justify-content-sm-start " style="width:5rem">
                                <span class="p-1 my-deepblue-color-tex">From:</span>
                            </div>
                            <div class="d-flex flex-row justify-content-start  " style="width:100%">
                                <span class="p-1 my-deepblue-color-tex font-weight-bold text-break">@SendGridDbModel.From</span>
                            </div>
                        </div>
                        <div class="d-flex flex-column w-100 my-deepblue-color-background" style="height:1px"></div>
                    </div>
                </div>
                <div class="d-flex flex-row w-100 p-2 justify-content-start">
                    <div class="flex-column w-100">
                        <div class="d-flex flex-sm-row flex-column w-100">
                            <div class="d-flex flex-row  justify-content-sm-start " style="width:5rem">
                                <span class="p-1 my-deepblue-color-tex">To:</span>
                            </div>
                            <div class="d-flex flex-row justify-content-start  " style="width:100%">
                                <span class="p-1 my-deepblue-color-tex font-weight-bold text-break">@SendGridDbModel.To</span>
                            </div>
                        </div>
                        <div class="d-flex flex-column w-100 my-deepblue-color-background" style="height:1px"></div>
                    </div>
                </div>
                <div class="d-flex flex-row w-100 p-2 justify-content-start">
                    <div class="flex-column w-100">
                        <div class="d-flex flex-sm-row flex-column w-100">
                            <div class="d-flex flex-row  justify-content-sm-start " style="width:5rem">
                                <span class="p-1 my-deepblue-color-tex">Subject:</span>
                            </div>
                            <div class="d-flex flex-row justify-content-start  " style="width:100%">
                                <span class="p-1 my-deepblue-color-tex font-weight-bold text-break">@SendGridDbModel.Subject</span>
                            </div>
                        </div>
                        <div class="d-flex flex-column w-100 my-deepblue-color-background" style="height:1px"></div>
                    </div>
                </div>
                <div class="flex-row w-100 p-3 mt-5 text-break">
                    @((MarkupString)SendGridDbModel.Html)
                </div>
            </div>
        }
    </Authorized>
</AuthorizeView>




@code {

    [Parameter]
    public int MailId { get; set; }
    [Parameter]
    public SendGridDbModel SendGridDbModel { get; set; }
    protected BSpinner Spiner { get; set; }

    protected override async Task OnInitializedAsync()
    {
        SendGridDbModel = await ApiCalls.GetEmail(MailId);
       
        if (!SendGridDbModel.IsRed)
        {
            //marking email as red 
            var jsonContent = JsonContent.Create(new Patch() { Op = "replace", Path = "/IsRed", Value = true });
            var pachContent = new StringContent("[" + jsonContent.ReadAsStringAsync().Result + "]", null, "application/json");
            await ApiCalls.UpdateEmailRecord(MailId, pachContent);
        }

    }

    private void Return()
    {
        NavigationManager.NavigateTo("inbox");
    }

    private class Patch
    {
        public string Op { get; set; }
        public string  Path { get; set; }
        public bool Value { get; set; }
    }

}




